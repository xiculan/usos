/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template

*.utilitats csv *******************
*1.filtrar csv per columna, li diem el nom del arxiu de sortida on hi posarem
*--el contingut de una columna del csv base

 */
package xicu.usos;

//importem llibreries
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Properties;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author xicu
 */
public final class form extends javax.swing.JFrame {

    //definicio de variables globals
    Properties config = new Properties();
    InputStream configInput = null;
    String RutaPropiedades = null;
    String RutaTarifas = null;
    String TarifaActual = null;
    String RutaTarifaActual = null;
    String RutaMf = null;
    Boolean SiempreEncima = null;

    aux_usos aux = new aux_usos();
    //JFrame formci = new form();
    //Optimus optimus = new Optimus();

    /**
     * Creates new form form1
     */
    public form() throws FileNotFoundException, IOException {

//    Properties p=new Properties();  
//    p.load(reader);  
//    System.out.println(p.getProperty("ruta_tarifas"));  
        RutaPropiedades = "config.properites";
        SiempreEncima = false;

        try {
            configInput = new FileInputStream("config.properties");
            config.load(configInput);
            System.out.println(config.getProperty("RutaTarifas"));
            RutaTarifas = config.getProperty("RutaTarifas");
            TarifaActual = config.getProperty("TarifaActual");
            RutaTarifaActual = RutaTarifas + TarifaActual;
            RutaMf = config.getProperty("RutaMf");

            //cargamos elk combobox con los archivos de la carpeta tarifas
//            System.out.println(config.getProperty("look_and_feel"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error cargando configuraci√≥n\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        initComponents();
        centerFrame();
        CargarComboArchivos(RutaTarifas);
        tRutaTarifas.setText(RutaTarifas);
        tTarifaActual.setText(TarifaActual);
        tRutaMf.setText(RutaMf);

        System.out.println(RutaPropiedades);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bProva = new javax.swing.JButton();
        tRutaBase = new javax.swing.JTextField();
        tRutaOut = new javax.swing.JTextField();
        tRutaFiltro = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taInfo = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tColFiltro = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        tFiltraColCodis = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lbColFiltroFiltro = new javax.swing.JLabel();
        tColFiltroBase = new javax.swing.JTextField();
        tColFiltroFiltro = new javax.swing.JTextField();
        cbCara5 = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        bInfo = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        tRutaTarifas = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tTarifaActual = new javax.swing.JTextField();
        cbSelTarifa = new javax.swing.JComboBox<>();
        tCadenaBuscar = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        tEstablecerTarifaActual = new javax.swing.JButton();
        chLimpiaVisor = new javax.swing.JCheckBox();
        bFiltrarVisor = new javax.swing.JButton();
        tFiltrarVisor = new javax.swing.JTextField();
        bFiltrar = new javax.swing.JButton();
        tCadenaFiltro = new javax.swing.JTextField();
        bConectarBD = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        bFiltraVariosMf1 = new javax.swing.JButton();
        bRutaMf = new javax.swing.JButton();
        tRutaMf = new javax.swing.JTextField();
        bElimOrde = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        bOptimus = new javax.swing.JButton();
        cbEncima = new javax.swing.JCheckBox();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bProva.setText("Prueba");
        bProva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProvaActionPerformed(evt);
            }
        });

        tRutaBase.setText("c:\\prova\\mafonsa.csv");
        tRutaBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tRutaBaseActionPerformed(evt);
            }
        });

        tRutaOut.setText("c:\\prova\\sortida.csv");

        tRutaFiltro.setText("c:\\prova\\filtre.csv");

        jButton1.setText("Filtra columna");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        taInfo.setColumns(20);
        taInfo.setRows(5);
        jScrollPane1.setViewportView(taInfo);

        jLabel1.setText("File");

        jLabel2.setText("File filtro:");

        jLabel3.setText("File salida:");

        tColFiltro.setText("0");

        jLabel4.setText("Col filtro:");

        jButton2.setText("Filtra string");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tFiltraColCodis.setText("Filtra col codis");
        tFiltraColCodis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tFiltraColCodisActionPerformed(evt);
            }
        });

        jLabel5.setText("col base:");

        lbColFiltroFiltro.setText("col filtro:");

        tColFiltroBase.setText("0");
        tColFiltroBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tColFiltroBaseActionPerformed(evt);
            }
        });

        tColFiltroFiltro.setText("0");

        cbCara5.setText("5 caracters");

        jButton3.setText("Afegir columna");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setText("columna a copiar:");

        jTextField1.setText("1");

        jButton4.setText("Clean info area");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        bInfo.setText("Info");
        bInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInfoActionPerformed(evt);
            }
        });

        jLabel7.setText("Ruta tarifas:");

        jLabel8.setText("Tarifa actual:");

        cbSelTarifa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSelTarifa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSelTarifaItemStateChanged(evt);
            }
        });

        jButton5.setText("Buscar Cadena");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tEstablecerTarifaActual.setText("Establecer tarifa actual");
        tEstablecerTarifaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tEstablecerTarifaActualActionPerformed(evt);
            }
        });

        chLimpiaVisor.setText("autolimpia visor");

        bFiltrarVisor.setText("filtrar visor");
        bFiltrarVisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltrarVisorActionPerformed(evt);
            }
        });

        bFiltrar.setText("Filtrar");

        bConectarBD.setText("conectar bd ci");
        bConectarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConectarBDActionPerformed(evt);
            }
        });

        jButton6.setText("Filtrar tablas");

        bFiltraVariosMf1.setText("filtra varios mf1");
        bFiltraVariosMf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltraVariosMf1ActionPerformed(evt);
            }
        });

        bRutaMf.setText("ruta mf");
        bRutaMf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRutaMfActionPerformed(evt);
            }
        });

        bElimOrde.setText("eliminar registros repetidos y ordenar mf");
        bElimOrde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bElimOrdeActionPerformed(evt);
            }
        });

        jButton7.setText("ver crud");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        bOptimus.setText("optimus");
        bOptimus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOptimusActionPerformed(evt);
            }
        });

        cbEncima.setText("encima");
        cbEncima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEncimaActionPerformed(evt);
            }
        });

        jButton8.setText("cerca textarea");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Pruebas conexion base datos");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("buscar en todos archivos de la carpeta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bConectarBD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tCadenaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(tFiltraColCodis, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tColFiltroBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lbColFiltroFiltro)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tColFiltroFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(cbCara5)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tRutaBase, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tRutaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tRutaOut, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(bFiltraVariosMf1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bOptimus)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tColFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(130, 130, 130))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(69, 69, 69)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(tRutaTarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGap(66, 66, 66)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGap(3, 3, 3)
                                                            .addComponent(jLabel8)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(tTarifaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(cbSelTarifa, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(tEstablecerTarifaActual, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(tCadenaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(175, 175, 175)
                                                .addComponent(bFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(62, 62, 62)
                                                .addComponent(bElimOrde, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(bRutaMf, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5)
                                                .addComponent(tRutaMf, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(97, 97, 97)
                                                .addComponent(jCheckBox1)))
                                        .addGap(2, 2, 2))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bProva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bFiltrarVisor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tFiltrarVisor, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbEncima)
                            .addComponent(chLimpiaVisor))
                        .addGap(97, 97, 97)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tRutaTarifas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSelTarifa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tTarifaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tRutaBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tRutaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tRutaOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(bOptimus))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(tCadenaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(tColFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tEstablecerTarifaActual)
                    .addComponent(bFiltraVariosMf1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tCadenaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bConectarBD)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bFiltrar)
                            .addComponent(jButton6))
                        .addGap(4, 4, 4)
                        .addComponent(jButton9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tFiltraColCodis)
                            .addComponent(jLabel5)
                            .addComponent(lbColFiltroFiltro)
                            .addComponent(tColFiltroBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tColFiltroFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tRutaMf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bRutaMf))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbCara5)
                            .addComponent(bElimOrde))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jLabel6)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbEncima)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bProva)
                    .addComponent(bInfo)
                    .addComponent(jButton4)
                    .addComponent(chLimpiaVisor)
                    .addComponent(bFiltrarVisor)
                    .addComponent(tFiltrarVisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bProvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProvaActionPerformed
        // TODO add your handling code here:

        aux.escriu_tainfo("hola", taInfo);

//        aux.prova();
//        aux.check_file();
//        try {
//            String RutaBase = tRutaBase.getText();
//            System.out.println("Contenido ruta");
//            System.out.println(RutaBase);
//
////            RutaBase="c:\\prova\\file.txt";
////            System.out.println("Contenido ruta");            
////            System.out.println(RutaBase);            
//            String linea = aux.busca_cadena(RutaBase, "poma");
//            System.out.println(linea);
//
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(form1.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_bProvaActionPerformed

    private void tRutaBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tRutaBaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tRutaBaseActionPerformed

    void imprime_lista_visor(ArrayList<String> lista) {
        // funcion para imprimir una lista en el visor
//			if(chLimpiaVisor.isSelected()) {
//				aVisor.setText("");
//			}
        for (String s : lista) {
            taInfo.append(s + "\n");
            // guardar array list en un archivo de texto csv auxiliar en la misma carpeta
        }
    }//fin imprime lista visor

    public void autolimpia_visor() {
        if (chLimpiaVisor.isSelected()) {
            taInfo.setText("");
        }
    }

    public void limpia_visor() {
        taInfo.setText("");
    }

    public void imprime_visor(String texto) {
        //autolimpia_visor();
        taInfo.append("\n" + texto);
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //            public static void filtra_csv(String ruta_base, String ruta_out, String ruta_filtre, int col_filtre_base, String separator) throws FileNotFoundException, IOException {
        String ruta_base = tRutaBase.getText();
        String ruta_filtre = tRutaFiltro.getText();
        String ruta_out = tRutaOut.getText();
        int col_filtre_base = Integer.parseInt(tColFiltro.getText());
        String separator = ";";

        try {
//            aux.filtra_csv(ruta_base, ruta_out, ruta_filtre, col_filtre_base, separator);
            aux.filtra_csv(ruta_base, ruta_out, ruta_filtre, col_filtre_base, separator);

//            aux.filtra_csv(ruta_base, ruta_out, ruta_filtre, col_filtre_base, separator);
        } catch (IOException ex) {
            Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, ex);
        }

        taInfo.setText("Archivo de salida: " + ruta_out);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void tFiltraColCodisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tFiltraColCodisActionPerformed
        // TODO add your handling code here:
//         System.out.println("Cridem al metode de filtre");
        String ruta_base = tRutaBase.getText();
        String ruta_filtre = tRutaFiltro.getText();
        String ruta_out = tRutaOut.getText();
        int col_filtro_base = Integer.parseInt(tColFiltroBase.getText());
        int col_filtro_filtro = Integer.parseInt(tColFiltroFiltro.getText());
        String separator = ";";

        try {
            if (cbCara5.isSelected()) {
                System.out.println("Cridem al metode de filtre mafonsa");
                //aux.filtra_csv_columna_codigos_cara5(ruta_base, ruta_filtre, ruta_out, col_filtro_base, col_filtro_filtro, separator);

            } else {

                System.out.println("Cridem al metode de filtre");
                aux.filtra_csv_columna_codigos(taInfo, ruta_base, ruta_filtre, ruta_out, col_filtro_base, col_filtro_filtro, separator);
            }
        } catch (IOException ex) {
            Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tFiltraColCodisActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //Cridem un metode que per cada registre del arxiu filtre
        //anira recorrent tots els registres del arxiu base i si el codi
        //coincideix, copiara la linia del arxiu base a l arxiu de sortida
        //i tambe la columna del arxiu de filtre que nosaltres escollim
        //com a columna a copiar
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        taInfo.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void bInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInfoActionPerformed
        // TODO add your handling code here:
        taInfo.setText("Info programa usos:");
        File config = new File("config.properties");
        String PathProperties = config.getAbsolutePath();
        taInfo.append("\nRuta archivo propiedades: " + PathProperties);
        taInfo.append("\n RutaTarifas:" + RutaTarifas);
        taInfo.append("\n RutaTarifaActual:" + RutaTarifaActual);

    }//GEN-LAST:event_bInfoActionPerformed

    private void tColFiltroBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tColFiltroBaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tColFiltroBaseActionPerformed

    private void tEstablecerTarifaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tEstablecerTarifaActualActionPerformed
        try {
            // TODO add your handling code here:
            //Guarda en el archivo de configuracion la tarifa actual para que cuando
            //volvamos a abrir el programa esta tarifa este por defercto
            EscribirPropiedad(config, "TarifaActual", "manxa.txt");

        } catch (IOException ex) {
            Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_tEstablecerTarifaActualActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //String RutaTarifas = "c:\\tarifas\\";

        //autolimpia_visor();
        String RutaFile = RutaTarifas + tTarifaActual.getText();
        int counter = 0;
        File file1 = new File(RutaFile);

        //Checks if file1 exists
        if (file1.exists() && !file1.isDirectory()) {
            System.out.println(file1 + " Exists");
        } else {
            //imprime_visor("El archivo no exite");
            System.out.println(file1 + " Does not exists");
            taInfo.append("Archivo no encontrado: " + file1);
//            System.exit(0);
            return;
        }

        String cadena = tCadenaBuscar.getText();
        System.out.println(RutaFile);
        System.out.println(cadena);

        ArrayList<String> res = null;
        try {

            //call to function busca_lineas that returns an arraylist whith 
            //the encountered lines
            res = aux.busca_lineas(RutaFile, cadena);

            for (String s : res) {
                //taInfo.append(s);
                taInfo.append("\n" + s);
                counter++;

                System.out.println(s);
            }
//            taInfo.setText(res);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (res.isEmpty() == true) {
            //taInfo.setText("");
            taInfo.setText("\nCadena no encontrada:" + cadena);
        }
        //autolimpia_visor();
        //imprime_lista_visor(res);
    }//GEN-LAST:event_jButton5ActionPerformed


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbSelTarifaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSelTarifaItemStateChanged
        // TODO add your handling code here:
        tTarifaActual.setText(cbSelTarifa.getSelectedItem().toString());
    }//GEN-LAST:event_cbSelTarifaItemStateChanged

    private void bFiltrarVisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltrarVisorActionPerformed
        /**
         * ergerger
         */
// Filtramos el visor con la cadena del cuadro de texto tFiltrarVisor
        //1.guardamo el contenido del textarea en un textarray
        //2.mostramos solo las filas que contienen la cadena buscada

        String cadena = tFiltrarVisor.getText();
        System.out.println(cadena);

        String s[] = taInfo.getText().split("\\r?\\n");

        //ara tenim el text area en un array hem de cercar les linies
        //que contenen la cadena dins del array
        limpia_visor();
//        imprime_visor("Filtrado: ******************");
        for (int i = 0; i < s.length; i++) {
            if (s[i].contains(cadena)) {
                System.out.println(s[i]);
                imprime_visor(s[i]);
            }
        }

//        ArrayList<String> arrList = new ArrayList<>(Arrays.asList(s));
        //limpia_visor();
//        int n;
//        for (int i = 0; i < s.length; i++) {
//            System.out.println(s[i]);
//        }
        //imprime_visor(cadena);
//        System.out.println(arrList);
//        taInfo.append("Cadena filtrada: ");
//        imprime_lista_visor(arrList);
        //filtrar el array list con la cadena y mostrarlo en el visor
//        String LineaEncontrada = null;

    }//GEN-LAST:event_bFiltrarVisorActionPerformed

    private void bFiltraVariosMf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltraVariosMf1ActionPerformed
//filtra archivo base con el archivo filtro, por cada registro del archivo filtro
//, si el archivo base contiene la cadena, copia el registro del archivo base en el archivo de salida3
    
        //            public static void filtra_csv(String ruta_base, String ruta_out, String ruta_filtre, int col_filtre_base, String separator) throws FileNotFoundException, IOException {
        String ruta_base = tRutaBase.getText();  //"C:\\prova\\base_mf_prova.csv";  
        String ruta_filtre = tRutaFiltro.getText(); //"C:\\prova\\filtre.csv";
        String ruta_out = tRutaOut.getText(); //"C:\\prova\\sortida_mf.csv";  

        System.out.println(ruta_out);

//        String ruta_base = tRutaBase.getText();
//        String ruta_filtre = tRutaFiltro.getText();
//        String ruta_out = tRutaOut.getText();
//        
        int col_base = Integer.parseInt(tColFiltroBase.getText());
        int col_filtro = Integer.parseInt(tColFiltro.getText());
        String separator = ";";

        try {
//            aux.filtra_csv(ruta_base, ruta_out, ruta_filtre, col_filtre_base, separator);
            //aux.filtra_csv(ruta_base, ruta_out, ruta_filtre, col_filtre_base, separator);
            aux.filtra_csv_columna_codigos(taInfo, ruta_base, ruta_filtre, ruta_out, col_base, col_filtro, separator);
            System.out.println();
//            aux.filtra_csv(ruta_base, ruta_out, ruta_filtre, col_filtre_base, separator);
        } catch (IOException ex) {
            Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, ex);
        }

        taInfo.append("Archivo de salida: " + ruta_out);
    }//GEN-LAST:event_bFiltraVariosMf1ActionPerformed

    private void bRutaMfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRutaMfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bRutaMfActionPerformed

    private void bElimOrdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bElimOrdeActionPerformed
        try {
            // TODO add your handling code here:
            String res = aux.busca_cadena(RutaMf, "2222");
            taInfo.setText(res);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bElimOrdeActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        //formci.setVisible(true);
        this.setVisible(false);
        this.dispose();
        try {
            mostrar_crud();
        } catch (IOException ex) {
            Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    
    static void mostrar_crud() throws FileNotFoundException, IOException {
		//FormConfig config = new FormConfig();
                form_crud crud = new form_crud();
		crud.setAlwaysOnTop(false);
		crud.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//		crud.setTitle("Gestion de contactos");
		crud.setBounds(500, 0, 800, 700);
		crud.setVisible(true);
		

	}
    
    private void bOptimusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOptimusActionPerformed
        // TODO add your handling code here:
        //optimus.setVisible(true);
    }//GEN-LAST:event_bOptimusActionPerformed

    private void cbEncimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEncimaActionPerformed
        // TODO add your handling code here:
        if (cbEncima.isSelected() == true) {
            this.setAlwaysOnTop(true);

        } else {
            this.setAlwaysOnTop(false);
        }
    }//GEN-LAST:event_cbEncimaActionPerformed

    private void bConectarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConectarBDActionPerformed
        // TODO add your handling code here:
        //conecterm a la base integral i mostrem pel taInfo

        Aux_ci integral = new Aux_ci();

        imprime_visor("check ci : ------------------------");
//        Connection res = integral.conectar_ci();
//        String prueba_conexion_ci = integral.check_ci_connection();
        Connection prueba_conexion_ci = integral.conectar_ci();
        imprime_visor("check ci : ------------------------");
        imprime_visor(prueba_conexion_ci.toString());
        System.out.println(prueba_conexion_ci);

        //proba de conexio a gestf local en pcxicu **funciona **
//        String res = integral.conectar_gestf_local();
        //taInfo.append(res);

    }//GEN-LAST:event_bConectarBDActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Highlighter.HighlightPainter painter
                = new DefaultHighlighter.DefaultHighlightPainter(Color.cyan);
        String Word = tFiltrarVisor.getText();
        String text = taInfo.getText();
        int offset = text.indexOf(Word);
        int length = Word.length();

        while (offset != -1) {
            try {
                taInfo.getHighlighter().addHighlight(offset, offset + length, painter);
                offset = text.indexOf(Word, offset + 1);
            } catch (BadLocationException ble) {
                System.out.println(ble);
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Aux_ci prueba_conexion = new Aux_ci();
//        prueba_conexion.conectar_gestf_remot();
//String msg = prueba_conexion.conectar_gestf_local();
        //imprime_visor(msg);

    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new form().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConectarBD;
    private javax.swing.JButton bElimOrde;
    private javax.swing.JButton bFiltraVariosMf1;
    private javax.swing.JButton bFiltrar;
    private javax.swing.JButton bFiltrarVisor;
    private javax.swing.JButton bInfo;
    private javax.swing.JButton bOptimus;
    private javax.swing.JButton bProva;
    private javax.swing.JButton bRutaMf;
    private javax.swing.JCheckBox cbCara5;
    private javax.swing.JCheckBox cbEncima;
    private javax.swing.JComboBox<String> cbSelTarifa;
    private javax.swing.JCheckBox chLimpiaVisor;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lbColFiltroFiltro;
    private javax.swing.JTextField tCadenaBuscar;
    private javax.swing.JTextField tCadenaFiltro;
    private javax.swing.JTextField tColFiltro;
    private javax.swing.JTextField tColFiltroBase;
    private javax.swing.JTextField tColFiltroFiltro;
    private javax.swing.JButton tEstablecerTarifaActual;
    private javax.swing.JButton tFiltraColCodis;
    private javax.swing.JTextField tFiltrarVisor;
    private javax.swing.JTextField tRutaBase;
    private javax.swing.JTextField tRutaFiltro;
    private javax.swing.JTextField tRutaMf;
    private javax.swing.JTextField tRutaOut;
    private javax.swing.JTextField tRutaTarifas;
    private javax.swing.JTextField tTarifaActual;
    private javax.swing.JTextArea taInfo;
    // End of variables declaration//GEN-END:variables

    public void EscribirPropiedad(Properties ArchivoPropiedades, String Parametro, String Valor) throws FileNotFoundException, IOException {
        ArchivoPropiedades.put(Parametro, Valor);
//        String path = "config.properties";
//        FileOutputStream configOutput = new FileOutputStream(path);
//        ArchivoPropiedades.store(configOutput,"proba");
//        try{
//            configOutput = new FileOutputStream(ArchivoPropiedades);
////            config.setProperty(Parametro, Valor);
//            System.out.println(Parametro);
//            System.out.println(Valor);
//            System.out.println(ArchivoPropiedades.toString());
//            ArchivoPropiedades.setProperty(Parametro, Valor);
//            ArchivoPropiedades.store(configOutput, Parametro);
//            
//        } catch(Exception e){
//            JOptionPane.showMessageDialog(null, "Error guardando configuraci√≥n\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//        }
    }

    void CargarComboArchivos(String ruta_carpeta) {
//        String sCarpAct = "c:\\tarifas";
        File carpeta = new File(ruta_carpeta);

        //Checks if file1 exists
        if (carpeta.exists() && carpeta.isDirectory()) {
            System.out.println("La carpeta: " + carpeta.toString() + " Exists");
        } else {
            imprime_visor("El directorio no existe");
            System.out.println("La carpeta: " + carpeta.toString() + "not exists");
//            System.exit(0);
            return;
        }

        String[] listado = carpeta.list();

        System.out.println("Listado de archivos de la carpeta:");

        for (int i = 0; i < listado.length; i++) {
            System.out.print("\n" + listado[i]);
        }

        System.out.println("");
        //return;
        cbSelTarifa.addItem("proba");

        //cbSelTarifa.removeAllItems();
//        cbSelTarifa.removeItemAt(0);
//        cbSelTarifa.removeItemAt(1);
//        cbSelTarifa.removeItemAt(2);
//        cbSelTarifa.removeItemAt(3);
//       
        if (listado == null || listado.length == 0) {
            System.out.println("No hay elementos dentro de la carpeta actual");
            return;
        } else {
            for (int i = 0; i < listado.length; i++) {
                cbSelTarifa.addItem(listado[i]);

            }

            for (int i = 0; i < listado.length; i++) {
                System.out.println(listado[i]);
            }
        }
    }//fin cargar combo

    private void centerFrame() {

        Dimension windowSize = getSize();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Point centerPoint = ge.getCenterPoint();

        int dx = centerPoint.x - windowSize.width / 2;
        int dy = centerPoint.y - windowSize.height / 2;
        setLocation(dx, dy);
    }

}
